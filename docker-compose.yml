services:
  user-service:
    build: ./src/parkingspotter-backend/user-service
    env_file: ./src/parkingspotter-backend/user-service/.env
    ports:
      - "4001:4001"
    restart: always
    depends_on:
      - postgres
    networks:
      - usp-net

  reservations-service:
    build: ./src/parkingspotter-backend/reservations-service
    env_file: ./src/parkingspotter-backend/reservations-service/.env
    ports:
      - "4002:4002"
    restart: always
    depends_on:
      - postgres
    networks:
      - usp-net

  ingestion-service:
    build: ./src/parkingspotter-backend/ingestion-service
    env_file: ./src/parkingspotter-backend/ingestion-service/.env
    restart: always
    depends_on:
      - postgres
    networks:
      - usp-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    env_file: ./src/parkingspotter-backend/ingestion-service/.env
    ports:
      - "5675:5672"
      - "15675:15672"
    restart: always
    networks:
      - usp-net

  postgres:
    image: postgres:17
    env_file: ./src/parkingspotter-backend/user-service/.env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - usp-net

  frontend:
    build: ./src/parkingspotter-frontend
    volumes:
      - ./src/parkingspotter-frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    restart: always
    networks:
      - usp-net
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: ["npm", "run", "dev"]

volumes:
  pgdata:

networks:
  usp-net:
